// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`layers_menu_closed 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "bottom": 80,
      "margin": 5,
      "marginRight": 0,
      "opacity": 1,
      "padding": 5,
      "paddingRight": 0,
      "position": "absolute",
      "right": -8,
      "zIndex": 90,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/layers.png",
      }
    }
    style={
      Object {
        "height": 66,
        "opacity": 0.6,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 4,
          "width": 0,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 4,
        "width": 66,
      }
    }
  />
</View>
`;

exports[`layers_menu_open 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
        "borderRadius": 6,
        "elevation": 4,
        "maxHeight": "100%",
        "padding": 15,
        "paddingRight": 0,
        "position": "absolute",
        "right": 35,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 4,
          "width": 0,
        },
        "shadowOpacity": 0.4,
        "shadowRadius": 6,
      },
      Object {
        "bottom": 100,
        "width": 205,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "flex": 0,
        "opacity": 1,
        "position": "absolute",
        "right": 0,
        "zIndex": 99,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#AAAAAA",
          "fontSize": 30,
          "fontWeight": "bold",
          "lineHeight": 30,
          "margin": 5,
          "marginRight": 8,
          "padding": 2,
          "paddingLeft": 6,
          "paddingRight": 6,
        }
      }
    >
      Ã—
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#AAAAAA",
        "fontSize": 14,
      }
    }
  >
    Visible Features
  </Text>
  <View
    style={
      Object {
        "flexDirection": "row",
        "flexWrap": "wrap",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginRight": 20,
          "marginTop": 10,
          "width": 170,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#666667",
            "flex": 1,
          }
        }
      >
        Route Lines
      </Text>
      <RCTSwitch
        disabled={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {},
          ]
        }
        value={true}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginRight": 20,
          "marginTop": 10,
          "width": 170,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#666667",
            "flex": 1,
          }
        }
      >
        Stops
      </Text>
      <RCTSwitch
        disabled={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {},
          ]
        }
        value={true}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginRight": 20,
          "marginTop": 10,
          "width": 170,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#666667",
            "flex": 1,
          }
        }
      >
        Buses
      </Text>
      <RCTSwitch
        disabled={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {},
          ]
        }
        value={false}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginRight": 20,
          "marginTop": 10,
          "width": 170,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#666667",
            "flex": 1,
          }
        }
      >
        Trains
      </Text>
      <RCTSwitch
        disabled={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {},
          ]
        }
        value={true}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginRight": 20,
          "marginTop": 10,
          "width": 170,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#666667",
            "flex": 1,
          }
        }
      >
        Vehicle Labels
      </Text>
      <RCTSwitch
        disabled={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {},
          ]
        }
        value={true}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginRight": 20,
          "marginTop": 10,
          "width": 170,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#666667",
            "flex": 1,
          }
        }
      >
        3D Buildings
      </Text>
      <RCTSwitch
        disabled={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {},
          ]
        }
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`null_layers_menu 1`] = `undefined`;
